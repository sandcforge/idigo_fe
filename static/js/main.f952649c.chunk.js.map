{"version":3,"sources":["ItemCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","margin","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","width","spacing","height","backgroundColor","red","filmstripContainer","display","flexDirection","justifyContent","overflowX","image","borderStyle","borderWidth","ItemCard","props","classes","React","useState","expanded","setExpanded","details","Card","className","CardHeader","onClick","Avatar","aria-label","src","GodImageUrl","alt","title","GodAppTitle","subheader","GodPresentPrice","Collapse","in","timeout","unmountOnExit","CardContent","content","GodName","GodSpecification","GodSellStock","GodAppDescribe","GodImageUrl1","GodImageUrl2","GodImageUrl3","GodImageUrl4","GodImageUrl5","GodImageUrl6","GodImageUrl7","GodImageUrl8","GodId","GodCode","GodBarcode","GodBrand","GodNum","GodWeight","TextListItem","snackbarStatus","setSnackbarStatus","ListItem","alignItems","text","onCopy","ListItemIcon","IconButton","ListItemText","primary","secondary","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","event","reason","message","corsProxy","App","flexGrow","palette","background","paper","rootTabValue","setRootTabValueValue","defaultTabPageStatus","index","hasMore","tabPageStatus","setTabPageStatus","listData","setListData","productCategory","setProductCategory","subTabValue","setSubTabValueValue","clearListData","fetchData","a","buildFetchUrl","tabIndex","subTabIndex","pageIndex","EndpointOfNewProducts","EndpointOfCategroyProducts","MgcCode","axios","result","newData","data","Data","DataBody","length","prevState","concat","fetchProductCategory","useEffect","AppBar","position","Tabs","variant","value","onChange","newValue","console","log","Tab","label","a11yProps","map","item","Button","color","fullWidth","indicatorColor","textColor","scrollButtons","category","idx","MgcName","MgcId","TabPanel","children","other","role","hidden","id","aria-labelledby","Box","p","Typography","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f952649c.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n    margin: 8,\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n    backgroundColor: red[500],\n  },\n  filmstripContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    overflowX: 'auto',\n    width: '100%',\n  },\n  image: {\n    borderStyle: 'solid',\n    borderWidth: 1,\n    height: 200,\n    margin: 1,\n  }\n}));\n\n\n\nexport const ItemCard = (props) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const {details} = props;\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <>\n    <Card className={classes.root}>\n      <CardHeader\n        onClick={handleExpandClick}\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            <img width='100%' height='100%' src={details.GodImageUrl} alt='avatar'/>\n          </Avatar>\n        }\n        title={details.GodAppTitle}\n        subheader={`\\u00a5${details.GodPresentPrice}`}\n      />\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <TextListItem title='商品名称' content={details.GodName} />\n          <TextListItem title='商品价格' content={`\\u00a5${details.GodPresentPrice}`} />\n          <TextListItem title='商品规格' content={details.GodSpecification} />\n          <TextListItem title='商品库存' content={details.GodSellStock} />\n          <TextListItem title='商品文案' content={details.GodAppDescribe} />\n          <div className={classes.filmstripContainer}>\n              <img className={classes.image} src={details.GodImageUrl} alt={'0'} />\n              { details.GodImageUrl1 ? <img className={classes.image} src={details.GodImageUrl1} alt={1} /> : null }\n              { details.GodImageUrl2 ? <img className={classes.image} src={details.GodImageUrl2} alt={2} /> : null }\n              { details.GodImageUrl3 ? <img className={classes.image} src={details.GodImageUrl3} alt={3} /> : null }\n              { details.GodImageUrl4 ? <img className={classes.image} src={details.GodImageUrl4} alt={4} /> : null }\n              { details.GodImageUrl5 ? <img className={classes.image} src={details.GodImageUrl5} alt={5} /> : null }\n              { details.GodImageUrl6 ? <img className={classes.image} src={details.GodImageUrl6} alt={6} /> : null }\n              { details.GodImageUrl7 ? <img className={classes.image} src={details.GodImageUrl7} alt={7} /> : null }\n              { details.GodImageUrl8 ? <img className={classes.image} src={details.GodImageUrl8} alt={8} /> : null }\n          </div>\n          <TextListItem title='其他' content={`id: ${details.GodId} Code: ${details.GodCode} Barcode: ${details.GodBarcode} Brand: ${details.GodBrand} Num: ${details.GodNum} Weight: ${details.GodWeight}`} />\n        </CardContent>\n      </Collapse>\n    </Card>\n\n    </>\n  );\n\n};\n\nconst TextListItem = (props) => {\n  const {title, content} = props;\n  const [snackbarStatus, setSnackbarStatus] = React.useState(false);\n\n  const showSnackbar = () => {\n    setSnackbarStatus(true);\n  };\n\n  const hideSnackbar = (event, reason) => {\n    setSnackbarStatus(false);\n  };\n\n\n  return (<>\n    <ListItem alignItems=\"flex-start\">\n    <CopyToClipboard text={content} onCopy={()=>{showSnackbar();}}>\n      <ListItemIcon ><IconButton><FileCopyIcon /></IconButton></ListItemIcon>\n    </CopyToClipboard>\n    <ListItemText primary={title} secondary={content}/>\n  </ListItem>\n  <Snackbar\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    }}\n    open={snackbarStatus}\n    autoHideDuration={3000}\n    onClose={hideSnackbar}\n    message={`复制到剪贴板：${content}.`}\n  />\n  </>);\n};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport apiData from './apiData.json';\nimport './App.css';\nimport {ItemCard} from './ItemCard.js';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nconst corsProxy = 'https://api.codetabs.com/v1/proxy/?quest=';\nconst EndpointOfProductCategory = `https://www.snailsmall.com/GoodsCategory/FindBigCategory`;\nconst CONST_PAGE_SIZE = 30;\nconst CONST_NEW_PRODUCT_TAB_INDEX = 0;\nconst CONST_CATEGORY_TAB_INDEX = 1;\nconst CONST_ORDER_TAB_INDEX = 2;\n\nexport const App = () => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n  const classes = useStyles();\n\n  const [rootTabValue, setRootTabValueValue] = React.useState(0);\n  const defaultTabPageStatus = {index: 0, hasMore: true};\n  const [tabPageStatus, setTabPageStatus] = React.useState(defaultTabPageStatus);\n\n  const [listData, setListData] = useState([]);\n  const [productCategory, setProductCategory] = useState([]);\n\n  const [subTabValue, setSubTabValueValue] = React.useState(0);\n\n  const handleSubTabChange = (event, newValue) => {\n    clearListData();\n    setSubTabValueValue(newValue);\n  };\n\n  const handleRootTabChange = (event, newValue) => {\n    console.log(newValue);\n    clearListData();\n    setRootTabValueValue(newValue);\n  };\n\n  const clearListData = () => {\n    setListData([]);\n    setTabPageStatus(defaultTabPageStatus);\n  };\n\n  const loadListData = (newData) => {\n    if (newData.length === 0) {\n      setTabPageStatus(prevState => ({\n        ...prevState,\n        hasMore: false,\n      }));\n    }\n    else {\n      setListData(listData.concat(newData));\n      setTabPageStatus(prevState => ({\n        ...prevState,\n        index: tabPageStatus.index+1,\n      }));\n    }\n  };\n\n  const fetchData = async () => {\n    const buildFetchUrl = (tabIndex, subTabIndex, pageIndex) => {\n      if (tabIndex === 0) {\n        const EndpointOfNewProducts = `https://www.snailsmall.com/Goods/FindPage?data={\"Criterion\":{\"GodIsNew\":true},\"PageIndex\":${pageIndex},\"PageSize\":${CONST_PAGE_SIZE}}`;\n        return corsProxy + EndpointOfNewProducts;\n      }\n      else if (tabIndex === 1) {\n        const EndpointOfCategroyProducts = `https://www.snailsmall.com/Goods/FindPage?data={\"Criterion\":{\"GodCategoryCode\":\"${productCategory[subTabIndex].MgcCode}\"},\"PageIndex\":${pageIndex},\"PageSize\":${CONST_PAGE_SIZE}}`;\n        return corsProxy + EndpointOfCategroyProducts;\n      }\n      \n      return '';\n    };\n    if (rootTabValue === CONST_NEW_PRODUCT_TAB_INDEX || rootTabValue === CONST_CATEGORY_TAB_INDEX) {\n      const result = await axios(buildFetchUrl(rootTabValue, subTabValue, tabPageStatus.index));\n      loadListData(result.data.Data.DataBody);  \n    }\n  };\n\n  const fetchProductCategory = async () => {\n    const result = await axios(corsProxy + EndpointOfProductCategory);\n    setProductCategory(result.data.Data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [rootTabValue, subTabValue]);\n  useEffect(() => {\n    fetchProductCategory();\n  }, []);\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={rootTabValue}\n          onChange={handleRootTabChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"新品\" {...a11yProps(CONST_NEW_PRODUCT_TAB_INDEX)} />\n          <Tab label=\"分类\" {...a11yProps(CONST_CATEGORY_TAB_INDEX)} />\n          <Tab label=\"折扣\" {...a11yProps(CONST_ORDER_TAB_INDEX)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={rootTabValue} index={CONST_NEW_PRODUCT_TAB_INDEX}>\n        {listData.map((item) => <ItemCard key={item.GodId} details={item}/>)}\n        {tabPageStatus.hasMore ? <Button variant=\"contained\" color=\"primary\" fullWidth={true} onClick={fetchData} >\n          加载更多\n        </Button> : null }\n      </TabPanel>\n      <TabPanel value={rootTabValue} index={CONST_CATEGORY_TAB_INDEX}>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs\n            value={subTabValue}\n            onChange={handleSubTabChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"on\"\n            aria-label=\"scrollable auto tabs example\"\n          >\n            {productCategory.map(( category, idx ) => <Tab key={category.MgcId} label={category.MgcName} {...a11yProps(idx)} />)}\n          </Tabs>\n        </AppBar>\n\n        <TabPanel value={subTabValue} index={subTabValue}>\n        {listData.map((item) => <ItemCard key={item.GodId} details={item}/>)}\n        {tabPageStatus.hasMore ? <Button variant=\"contained\" color=\"primary\" fullWidth={true} onClick={fetchData} >\n          加载更多\n        </Button> : null }\n      </TabPanel>\n\n      </TabPanel>\n      <TabPanel value={rootTabValue} index={CONST_ORDER_TAB_INDEX}>\n        Item Three\n      </TabPanel>\n    </div>\n  );\n\n};\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={0}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst a11yProps = (index) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}