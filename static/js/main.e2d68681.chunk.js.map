{"version":3,"sources":["ItemCard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","image","width","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","spacing","height","backgroundColor","red","useStyles1","display","flexWrap","justifyContent","overflow","palette","background","paper","gridList","title","color","primary","light","titleBar","ItemCard","props","classes","classes1","React","useState","expanded","setExpanded","details","console","log","Card","className","CardHeader","Avatar","aria-label","src","GodImageUrl","Typography","variant","GodAppTitle","subheader","GodPresentPrice","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","CardContent","paragraph","GodName","GodSpecification","GodSellStock","GodAppDescribe","GridList","cols","GridListTile","alt","GodImageUrl1","GodImageUrl2","GodImageUrl3","GodImageUrl4","GodId","GodCode","GodBarcode","GodBrand","GodNum","GodWeight","App","data","setData","useEffect","a","axios","result","fetchData","apiData","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2d68681.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n  },\n  image: {\n    width: '100%',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n    backgroundColor: red[500],\n  },\n}));\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n}));\n\n\nexport const ItemCard = (props) => {\n  const classes = useStyles();\n  const classes1 = useStyles1();\n  const [expanded, setExpanded] = React.useState(false);\n  const {details} = props;\n  console.log(details);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n \n  return (\n    <>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            <img className={classes.image} src={details.GodImageUrl} />\n          </Avatar>\n        }\n        title={<Typography variant='h5'>{details.GodAppTitle}</Typography>}\n        subheader={`\\u00a5${details.GodPresentPrice}`}\n      />\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography variant='h5'>商品名称</Typography>\n          <Typography paragraph>{details.GodName}</Typography>\n          <Typography variant='h5'>商品价格</Typography>\n          <Typography paragraph>{details.GodPresentPrice}</Typography>\n          <Typography variant='h5'>商品规格</Typography>\n          <Typography paragraph>{details.GodSpecification}</Typography>\n          <Typography variant='h5'>商品库存</Typography>\n          <Typography paragraph>{details.GodSellStock}</Typography>\n          <Typography variant='h5'>商品文案</Typography>\n          <Typography paragraph>{details.GodAppDescribe}</Typography>\n          \n          <GridList className={classes1.gridList} cols={2.5}>\n              <GridListTile key={0}><img src={details.GodImageUrl} alt={0} /></GridListTile>\n              <GridListTile key={1}><img src={details.GodImageUrl1} alt={1} /></GridListTile>\n              <GridListTile key={2}><img src={details.GodImageUrl2} alt={2} /></GridListTile>\n              <GridListTile key={3}><img src={details.GodImageUrl3} alt={3} /></GridListTile>\n              <GridListTile key={4}><img src={details.GodImageUrl4} alt={4} /></GridListTile>\n          </GridList>\n\n          <img className={classes.image} src={details.GodImageUrl} />\n          <Typography variant='h5'>其他</Typography>\n          <Typography paragraph>{`id: ${details.GodId}`}</Typography>\n          <Typography paragraph>{`Code: ${details.GodCode}`}</Typography>\n          <Typography paragraph>{`Barcode: ${details.GodBarcode}`}</Typography>\n          <Typography paragraph>{`Brand: ${details.GodBrand}`}</Typography>\n          <Typography paragraph>{`Num: ${details.GodNum}`}</Typography>\n          <Typography paragraph>{`Weight: ${details.GodWeight}`}</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n    </>\n  );\n\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport apiData from './apiData.json';\nimport './App.css';\nimport {ItemCard} from './ItemCard.js';\n\n\nexport const App = () => {\n  const [data, setData] = useState({ data: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n\n      // axios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\n      const result = await axios(\n        'https://hn.algolia.com/api/v1/search?query=redux',\n      );\n      setData(result.data);\n    };\n \n    fetchData();\n  }, []);\n \n \n  return (\n    <>\n      {apiData.map((item) => <ItemCard key={item.GodId} details={item}/>)}\n    </>\n  );\n\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}